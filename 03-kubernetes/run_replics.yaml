---
apiVersion: v1
kind: Namespace
metadata:
  name: python-server-ns

---
apiVersion: v1
kind: Secret
metadata:
  name: dockerhub-creds
  namespace: python-server-ns
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJzZGFuaWxzIiwicGFzc3dvcmQiOiJkY2tyX3BhdF9iRGpTRUd0cXpYcXEzaDVtSWFqa0lqNl9LTjAifX19

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
  namespace: python-server-ns
data:
  AUTHOR: "Salomasov Daniil"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-server-deployment
  namespace: python-server-ns
  labels:
    app: python-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: python-server
  template:
    metadata:
      labels:
        app: python-server
    spec:
      containers:
      - name: python-server
        env:
        - name: AUTHOR
          valueFrom:
            configMapKeyRef:
              name: my-configmap
              key: AUTHOR
        image: sdanils/exho-server_image:echo_server
        ports:
        - containerPort: 8000 
        livenessProbe:
          httpGet:
            path: /  
            port: 8000
          initialDelaySeconds: 60  
          periodSeconds: 20        
          failureThreshold: 3      
        readinessProbe:
          httpGet:
            path: /   
            port: 8000
          initialDelaySeconds: 5   
          periodSeconds: 5         
          successThreshold: 1      
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"  
            cpu: "500m"
        imagePullPolicy: Always 
      imagePullSecrets:
      - name: dockerhub-creds

---
apiVersion: v1
kind: Service
metadata:
  name: python-server-service
  namespace: python-server-ns
spec:
  selector:
    app: python-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000 
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-server-ingress
  namespace: python-server-ns
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: python-server-service
            port:
              number: 80